# -*- coding: utf-8 -*-
"""MentalHacks-NLP.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18Bh1impVW02ff930TgS-dI7vmiOgbHu2
"""

import pandas as pd
import tensorflow as tf
import tensorflow_hub as hub
import numpy as np
#train_data = pd.read_csv('/content/train.txt', sep = ';')
#train_data.head()

# from datasets import load_dataset

# dataset = load_dataset("emotion")
# dataset.head()

# https://www.kaggle.com/datasets/praveengovi/emotions-dataset-for-nlp

def preprocess(file):
    data = pd.read_csv(file, sep = ';')
    hs = []
    for i in range(len(data.emotion)):
        if data['emotion'][i] in ['joy', 'love', 'surprise']:
            hs.append(1) # happy is 1
        else:
            hs.append(0) # sad is 0
    data['hs'] = hs
    return data

train_data = preprocess('train.txt')
train = train_data.copy()
train.head()

train[train.emotion == 'love']['text'].head()

train['emotion'].value_counts()

train.groupby('hs').describe()

model = "https://tfhub.dev/google/tf2-preview/gnews-swivel-20dim/1"
hub_layer = hub.KerasLayer(model, output_shape=[20], input_shape=[], 
                           dtype=tf.string, trainable=True)
#hub_layer(train['text'][:3])

model = tf.keras.Sequential()
model.add(hub_layer)
model.add(tf.keras.layers.Dense(16, activation='relu'))
model.add(tf.keras.layers.Dense(1))

#model.summary()

model.compile(optimizer='adam',
              loss=tf.losses.BinaryCrossentropy(from_logits=True),
              metrics=[tf.metrics.BinaryAccuracy(threshold=0.0, name='accuracy')])

val = preprocess('val.txt')
val.head()

history = model.fit(train.text,
                    train.hs,
                    epochs=40,
                    batch_size=512,
                    validation_data=(val.text, val.hs),
                    verbose = 0)

test = preprocess('test.txt')
results = model.evaluate(test['text'], test['hs'])

print(results)

#preds = model.predict(test.text)

predstr = model.predict(train.text)

#print(predstr.min(), predstr.max())

#print(preds.min(), preds.max())

def postprocessor(preds):
  range = predstr.max()-predstr.min()
  norm_preds = []
  probab = []
  for i in preds:
    norm_preds.append((i - predstr.min()) / range)
    probab.append((i - predstr.min()) * 100 / range)
  return np.mean(probab)

#print(postprocessor(preds))

def readanswers():
  with open('answers.txt') as file:
    answers = file.readlines()
  return answers

#answers = []
#answers.append(input('How would you describe your experience at your workplace/college/school in the past few days?'))
#answers.append(input('How do you like to spend your leisure time? How do you feel after it?'))
#answers.append(input('Life has its ups and downs. Although handling successes can be difficult, setbacks can affect mental health strongly. How do you manage your emotions after failures?'))
#answers.append(input('In a broad sense, how would you describe the way your life is going on?'))

#results = model.predict(answers)

results = model.predict(readanswers())
print('Your mental health score is:', postprocessor(results))

# < 25 -> needs attention